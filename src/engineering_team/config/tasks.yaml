design_task:
  description: >
    Take the high level requirements described here and prepare a detailed design for the engineer:
    everything should be in 1 python module, but outline the classes and method in that module.
    Here are the requirements:{requirements}
    IMPORTANT: Only output the design in the markdown format, laying out in detail the classes and the functions in the module.
  expected_output: >
    A detailed design for the engineer, identifying the classes and the functions in the module.
  agent: lead_engineer
  output_file: output/{module_name}_design.md

coding_task:
  description: >
    Write a python module that implements the design described by the lead engineer in order to achieve the requirements.
    Here are the requirements: {requirements}
  expected_output: >
    A pyhton module that implements the design and achieves the requirements.
    IMPORTANT: Output ONLY the raw python code without any markdown formatting, code block delimiters, or backticks;
    The output should be valid Python code that can be directly saved to a file and executed.
  agent: backend_developer
  context:
    - design_task
  output_file: output/{module_name}

frontend_task:
  description: >
    Write a Gradio UI in a module app.py that demostrates the given backend class in {module_name}
    Assume there is only 1 user, and keep the UI clean - just a prototype or demo.
    Here are the requirements: {requirements}
  expected_output: >
    A gradio UI in module app.py that demostrates the given backend class.
    The file should be ready so that it can be run as-is, in the same directory as the backend module and it should achieve the requirements.
    IMPORTANT: utput ONLY the raw python code without any markdown formatting, code block delimiters, or backticks;
    The output should be valid Python code that can be directly saved to a file and executed.
  agent: frontend_developer
  context:
    - coding_task
  output_file: output/app.py

test_task:
  description: >
    Write unit tests for the given backend module {module_name} and create a test_{module_name} in the same directory.
  expected_output: >
    A test_{module_name} module that tests the given backend module.
    IMPORTANT: utput ONLY the raw python code without any markdown formatting, code block delimiters, or backticks;
    The output should be valid Python code that can be directly saved to a file and executed.
  agent: testing_engineer
  context:
    - coding_task
  output_file: output/test{module_name}